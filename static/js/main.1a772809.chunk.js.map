{"version":3,"sources":["DroppableLocation.js","Constants.js","Locations.js","App.js","serviceWorker.js","index.js"],"names":["DroppableLocation","_this","this","react_default","a","createElement","style","minHeight","position","fontSize","fontWeight","textAlign","wordBreak","maxWidth","props","name","react_beautiful_dnd_esm","Object","assign","placeholder","provided","snapshot","ref","innerRef","isDraggingOver","id","droppableId","background","padding","width","children","Component","ITEMS","concat","ITEM_COPIES","Bow","Deku-Nut-Capacity","Deku-Stick-Capacity","Heart-Container","Hylian-Shield","Ocarina","Piece-of-Heart","Progressive-Hookshot","Progressive-Scale","Progressive-Strength-Upgrade","Progressive-Wallet","Slingshot","LOCATIONS","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","index","getItemStyle","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","junkPool","Arrows (10)","Arrows (30)","Arrows (5)","Bombchus (10)","Bombchus (20)","Bombchus (5)","Bombs (10)","Bombs (20)","Bombs (5)","Deku Nuts (10)","Deku Nuts (5)","Deku Seeds (30)","Deku Shield","Deku Stick (1)","Ice Trap","Recovery Heart","Rupee (1)","Rupees (20)","Rupees (200)","Rupees (5)","Rupees (50)","mt","MersenneTwister19937","autoSeed","assignJunk","keys","length","Error","item","randomPick","Locations","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","reset","state","unassigned","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","i","numCopies","push","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setState","getList","onDragEnd","items","defineProperty","export","entries","forEach","_ref","_ref2","key","test","split","slice","join","json","JSON","stringify","blob","Blob","type","blobURL","URL","createObjectURL","window","open","e","alert","message","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","location","_this2","onClick","float","display","marginLeft","maxHeight","overflowY","DroppableLocation_DroppableLocation","map","draggableId","draggableProps","dragHandleProps","flexWrap","justifyContent","flex","isDropDisabled","App","Locations_Locations","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6RAYqBA,mLACR,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,UAAW,IAAKC,SAAU,aACnCL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACG,SAAU,GAAIC,WAAY,OAAQC,UAAW,SAAUC,UAAW,aAAcC,SAAU,MAAOX,KAAKY,MAAMC,OAE7HZ,EAAAC,EAAAC,cAACW,EAAA,EAADC,OAAAC,OAAA,GAAehB,KAAKY,MAApB,CAA2BK,YAAY,SAClC,SAACC,EAAUC,GAAX,OACGlB,EAAAC,EAAAC,cAAA,OACIiB,IAAKF,EAASG,SACdjB,OAlBNkB,EAkB0BH,EAASG,eAlBnBC,EAkBmCxB,EAAKa,MAAMY,YAlBtC,CAC1CC,WAAYH,EAAiB,YAAc,YAC3CI,QAJS,EAKTC,MAAO,IACPtB,UAAkB,eAAPkB,EAAsB,IAAM,MAgBdxB,EAAKa,MAAMgB,SACXV,EAASD,aArBjB,IAACK,EAAgBC,YAOSM,aCiFlCC,EAAK,GAAAC,OA7FmB,CACnC,iBACA,aACA,gBACA,kBACA,mBACA,iBACA,kBACA,mBACA,oBAGmB,CACnB,iBACA,cACA,eACA,mBACA,qBACA,mBACA,oBACA,cACA,oBACA,iBACA,eACA,YACA,kBAGyB,CACzB,iBACA,WACA,YACA,0BACA,qBACA,yBACA,SACA,MACA,oBACA,cACA,sBACA,YACA,iBACA,cACA,cACA,SACA,kBACA,cACA,gBACA,aACA,aACA,eACA,gBACA,eACA,cACA,gBACA,cACA,UACA,uCACA,iBACA,aACA,uBACA,oBACA,+BACA,qBACA,iBACA,YACA,iBACA,YACA,eA2BWC,EAAc,CACzBC,IAAO,EACPC,oBAAqB,EACrBC,sBAAuB,EACvBC,kBAAmB,EACnBC,gBAAiB,EACjBC,QAAW,EACXC,iBAAkB,GAClBC,uBAAwB,EACxBC,oBAAqB,EACrBC,+BAAgC,EAChCC,qBAAsB,EACtBC,UAAa,GA2BFC,EAAY,CACvB,eACA,cACA,eACA,WACA,gBACA,WACA,SACA,cACA,WACA,kBACA,oBACA,4BACA,oBACA,kBACA,iBACA,oBACA,mBACA,2BACA,kBACA,kBACA,sBACA,qBACA,sBACA,uBACA,yBACA,0BACA,YACA,sBACA,kBACA,mCACA,kBACA,kBACA,oBACA,iBACA,8BACA,oBACA,gBACA,gBACA,2CACA,uCACA,mCACA,gCACA,gCACA,gCACA,oCACA,4BACA,+BACA,QACA,YACA,6BACA,6BACA,cACA,yBACA,2BACA,iCACA,sBACA,WACA,cACA,gBACA,iBACA,2BACA,2BACA,2BACA,2BACA,2BACA,8BACA,4BACA,yBACA,6BACA,oBACA,qBACA,0BACA,uBACA,iBACA,8BACA,gCACA,4BACA,WACA,iCACA,6BACA,8BACA,kCACA,yBACA,iBACA,eACA,kCACA,qCACA,sBACA,+BACA,oBACA,oBACA,oCACA,oCACA,kBACA,yBACA,mBACA,0CACA,yCACA,8BACA,kBACA,iCACA,8BACA,oCACA,kCACA,0BACA,6BACA,wCACA,sBACA,+BACA,6CACA,sCACA,sCACA,kCACA,sBACA,6BACA,+BACA,6BACA,uCACA,wBACA,0BACA,oCACA,2BACA,4BACA,sCACA,oBACA,4BACA,gCACA,uCACA,iCACA,sCACA,2BACA,qBACA,kBACA,6BACA,iCACA,iBACA,4BACA,mCACA,uCACA,2BACA,0BACA,mCACA,iCACA,+BACA,kCACA,0BACA,8BACA,+BACA,gCACA,sBACA,4CACA,2CACA,8CACA,wCACA,wCACA,wCACA,sCACA,iCACA,qCACA,4CACA,2CACA,oCACA,iCACA,wCACA,8BACA,gCACA,6BACA,iBACA,uCACA,2CACA,uCACA,uCACA,qCACA,wCACA,8BACA,wBACA,4BACA,kCACA,mCACA,uBACA,2BACA,8BACA,8BACA,eACA,yBACA,6BACA,kCACA,6BACA,4BACA,wCACA,8BACA,oCACA,+BACA,2BACA,0BACA,kCACA,8BACA,yCACA,+CACA,iDACA,2CACA,2CACA,4CACA,uCACA,iCACA,gCACA,uCACA,wCACA,uCACA,+BACA,yCACA,oBACA,2CACA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","file":"static/js/main.1a772809.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getListStyle = (isDraggingOver, id) => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 180,\n    minHeight: id === 'unassigned' ? 550 : 50\n});\n\nexport default class DroppableLocation extends Component {\n    render() {\n        return (\n            <div style={{minHeight: 175, position: 'relative'}}>\n                <div>\n                    <div style={{fontSize: 13, fontWeight: 'bold', textAlign: 'center', wordBreak: 'break-word', maxWidth: 196}}>{this.props.name}</div>\n                </div>\n                <Droppable {...this.props} placeholder='Junk'>\n                    {(provided, snapshot) => (\n                        <div\n                            ref={provided.innerRef}\n                            style={getListStyle(snapshot.isDraggingOver, this.props.droppableId)}\n                        >\n                            {this.props.children}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </div>\n        );\n    }\n}","export const STONES_AND_MEDALLIONS = [\n  \"Kokiri-Emerald\",\n  \"Goron-Ruby\",\n  \"Zora-Sapphire\",\n  \"Light-Medallion\",\n  \"Forest-Medallion\",\n  \"Fire-Medallion\",\n  \"Water-Medallion\",\n  \"Shadow-Medallion\",\n  \"Spirit-Medallion\"\n];\n\nexport const SONGS = [\n  \"Bolero-of-Fire\",\n  \"Eponas-Song\",\n  \"Farores-Wind\",\n  \"Minuet-of-Forest\",\n  \"Nocturne-of-Shadow\",\n  \"Prelude-of-Light\",\n  \"Requiem-of-Spirit\",\n  \"Sarias-Song\",\n  \"Serenade-of-Water\",\n  \"Song-of-Storms\",\n  \"Song-of-Time\",\n  \"Suns-Song\",\n  \"Zeldas-Lullaby\"\n];\n\nexport const MAJOR_ITEMS = [\n  \"Biggoron-Sword\",\n  \"Bomb-Bag\",\n  \"Boomerang\",\n  \"Bottle-with-Blue-Potion\",\n  \"Bottle-with-Letter\",\n  \"Bottle-with-Red-Potion\",\n  \"Bottle\",\n  \"Bow\",\n  \"Deku-Nut-Capacity\",\n  \"Deku-Shield\",\n  \"Deku-Stick-Capacity\",\n  \"Dins-Fire\",\n  \"Double-Defense\",\n  \"Fire-Arrows\",\n  \"Goron-Tunic\",\n  \"Hammer\",\n  \"Heart-Container\",\n  \"Hover-Boots\",\n  \"Hylian-Shield\",\n  \"Ice-Arrows\",\n  \"Iron-Boots\",\n  \"Kokiri-Sword\",\n  \"Lens-of-Truth\",\n  \"Light-Arrows\",\n  \"Magic-Meter\",\n  \"Mirror-Shield\",\n  \"Nayrus-Love\",\n  \"Ocarina\",\n  \"Piece-of-Heart-(Treasure-Chest-Game)\",\n  \"Piece-of-Heart\",\n  \"Pocket-Egg\",\n  \"Progressive-Hookshot\",\n  \"Progressive-Scale\",\n  \"Progressive-Strength-Upgrade\",\n  \"Progressive-Wallet\",\n  \"Recovery-Heart\",\n  \"Slingshot\",\n  \"Stone-of-Agony\",\n  \"Weird-Egg\",\n  \"Zora-Tunic\"\n];\n\nexport const JUNK = [\n  \"Arrows-(10)\",\n  \"Arrows-(30)\",\n  \"Arrows-(5)\",\n  \"Bombchus-(10)\",\n  \"Bombchus-(20)\",\n  \"Bombchus-(5)\",\n  \"Bombs-(10)\",\n  \"Bombs-(20)\",\n  \"Bombs-(5)\",\n  \"Deku-Nuts-(10)\",\n  \"Deku-Nuts-(5)\",\n  \"Deku-Seeds-(30)\",\n  \"Deku-Stick-(1)\",\n  \"Ice-Trap\",\n  \"Rupee-(1)\",\n  \"Rupees-(20)\",\n  \"Rupees-(200)\",\n  \"Rupees-(5)\",\n  \"Rupees-(50)\"\n];\n\nexport const ITEMS = [...STONES_AND_MEDALLIONS, ...SONGS, ...MAJOR_ITEMS];\n\nexport const ITEM_COPIES = {\n  \"Bow\": 3,\n  \"Deku-Nut-Capacity\": 3,\n  \"Deku-Stick-Capacity\": 3,\n  \"Heart-Container\": 8,\n  \"Hylian-Shield\": 2,\n  \"Ocarina\": 2,\n  \"Piece-of-Heart\": 35,\n  \"Progressive-Hookshot\": 2,\n  \"Progressive-Scale\": 2,\n  \"Progressive-Strength-Upgrade\": 3,\n  \"Progressive-Wallet\": 2,\n  \"Slingshot\": 3\n};\n\nexport const JUNK_POOL = {\n  \"Arrows (10)\": 8,\n  \"Arrows (30)\": 6,\n  \"Arrows (5)\": 6,\n  \"Bombchus (10)\": 3,\n  \"Bombchus (20)\": 1,\n  \"Bombchus (5)\": 1,\n  \"Bombs (10)\": 2,\n  \"Bombs (20)\": 2,\n  \"Bombs (5)\": 4,\n  \"Deku Nuts (10)\": 1,\n  \"Deku Nuts (5)\": 2,\n  \"Deku Seeds (30)\": 3,\n  \"Deku Shield\": 4,\n  \"Deku Stick (1)\": 2,\n  \"Ice Trap\": 6,\n  \"Recovery Heart\": 11,\n  \"Rupee (1)\": 1,\n  \"Rupees (20)\": 8,\n  \"Rupees (200)\": 6,\n  \"Rupees (5)\": 19,\n  \"Rupees (50)\": 7\n};\n\nexport const LOCATIONS = [\n  \"Links-Pocket\",\n  \"Queen-Gohma\",\n  \"King-Dodongo\",\n  \"Barinade\",\n  \"Phantom-Ganon\",\n  \"Volvagia\",\n  \"Morpha\",\n  \"Bongo-Bongo\",\n  \"Twinrova\",\n  \"Song-from-Saria\",\n  \"Sheik-Forest-Song\",\n  \"Song-from-Ocarina-of-Time\",\n  \"Sheik-at-Colossus\",\n  \"Sheik-at-Temple\",\n  \"Impa-at-Castle\",\n  \"Sheik-in-Kakariko\",\n  \"Song-at-Windmill\",\n  \"Song-from-Composer-Grave\",\n  \"Sheik-in-Crater\",\n  \"Song-from-Malon\",\n  \"Sheik-in-Ice-Cavern\",\n  \"Kokiri-Sword-Chest\",\n  \"Mido-Chest-Top-Left\",\n  \"Mido-Chest-Top-Right\",\n  \"Mido-Chest-Bottom-Left\",\n  \"Mido-Chest-Bottom-Right\",\n  \"Skull-Kid\",\n  \"Ocarina-Memory-Game\",\n  \"Target-in-Woods\",\n  \"LW-Deku-Scrub-Deku-Stick-Upgrade\",\n  \"Gift-from-Saria\",\n  \"Ocarina-of-Time\",\n  \"Underwater-Bottle\",\n  \"Lake-Hylia-Sun\",\n  \"Lake-Hylia-Freestanding-PoH\",\n  \"Diving-in-the-Lab\",\n  \"Child-Fishing\",\n  \"Adult-Fishing\",\n  \"Gerudo-Valley-Waterfall-Freestanding-PoH\",\n  \"Gerudo-Valley-Crate-Freestanding-PoH\",\n  \"Gerudo-Valley-Hammer-Rocks-Chest\",\n  \"Gerudo-Fortress-Rooftop-Chest\",\n  \"Horseback-Archery-1000-Points\",\n  \"Horseback-Archery-1500-Points\",\n  \"Haunted-Wasteland-Structure-Chest\",\n  \"Colossus-Freestanding-PoH\",\n  \"Desert-Colossus-Fairy-Reward\",\n  \"Zelda\",\n  \"Malon-Egg\",\n  \"Hyrule-Castle-Fairy-Reward\",\n  \"Ganons-Castle-Fairy-Reward\",\n  \"10-Big-Poes\",\n  \"Child-Shooting-Gallery\",\n  \"Bombchu-Bowling-Bomb-Bag\",\n  \"Bombchu-Bowling-Piece-of-Heart\",\n  \"Treasure-Chest-Game\",\n  \"Dog-Lady\",\n  \"Man-on-Roof\",\n  \"Anju-as-Adult\",\n  \"Anjus-Chickens\",\n  \"10-Gold-Skulltula-Reward\",\n  \"20-Gold-Skulltula-Reward\",\n  \"30-Gold-Skulltula-Reward\",\n  \"40-Gold-Skulltula-Reward\",\n  \"50-Gold-Skulltula-Reward\",\n  \"Impa-House-Freestanding-PoH\",\n  \"Windmill-Freestanding-PoH\",\n  \"Adult-Shooting-Gallery\",\n  \"Graveyard-Freestanding-PoH\",\n  \"Gravedigging-Tour\",\n  \"Shield-Grave-Chest\",\n  \"Heart-Piece-Grave-Chest\",\n  \"Composer-Grave-Chest\",\n  \"Hookshot-Chest\",\n  \"Dampe-Race-Freestanding-PoH\",\n  \"Death-Mountain-Bombable-Chest\",\n  \"DM-Trail-Freestanding-PoH\",\n  \"Biggoron\",\n  \"Goron-City-Leftmost-Maze-Chest\",\n  \"Goron-City-Left-Maze-Chest\",\n  \"Goron-City-Right-Maze-Chest\",\n  \"Goron-City-Pot-Freestanding-PoH\",\n  \"Rolling-Goron-as-Child\",\n  \"Link-the-Goron\",\n  \"Darunias-Joy\",\n  \"DM-Crater-Wall-Freestanding-PoH\",\n  \"DM-Crater-Volcano-Freestanding-PoH\",\n  \"Crater-Fairy-Reward\",\n  \"Mountain-Summit-Fairy-Reward\",\n  \"Frog-Ocarina-Game\",\n  \"Frogs-in-the-Rain\",\n  \"Zora-River-Lower-Freestanding-PoH\",\n  \"Zora-River-Upper-Freestanding-PoH\",\n  \"Diving-Minigame\",\n  \"Zoras-Domain-Torch-Run\",\n  \"King-Zora-Thawed\",\n  \"Zoras-Fountain-Iceberg-Freestanding-PoH\",\n  \"Zoras-Fountain-Bottom-Freestanding-PoH\",\n  \"Zoras-Fountain-Fairy-Reward\",\n  \"Talons-Chickens\",\n  \"Lon-Lon-Tower-Freestanding-PoH\",\n  \"Ganons-Tower-Boss-Key-Chest\",\n  \"Kokiri-Forest-Storms-Grotto-Chest\",\n  \"Lost-Woods-Generic-Grotto-Chest\",\n  \"Deku-Theater-Skull-Mask\",\n  \"Deku-Theater-Mask-of-Truth\",\n  \"LW-Grotto-Deku-Scrub-Deku-Nut-Upgrade\",\n  \"Wolfos-Grotto-Chest\",\n  \"Remote-Southern-Grotto-Chest\",\n  \"Field-Near-Lake-Outside-Fence-Grotto-Chest\",\n  \"HF-Grotto-Deku-Scrub-Piece-of-Heart\",\n  \"Field-West-Castle-Town-Grotto-Chest\",\n  \"Tektite-Grotto-Freestanding-PoH\",\n  \"Redead-Grotto-Chest\",\n  \"Kakariko-Back-Grotto-Chest\",\n  \"Mountain-Storms-Grotto-Chest\",\n  \"Top-of-Crater-Grotto-Chest\",\n  \"Zora-River-Plateau-Open-Grotto-Chest\",\n  \"Deku-Tree-Lobby-Chest\",\n  \"Deku-Tree-Compass-Chest\",\n  \"Deku-Tree-Compass-Room-Side-Chest\",\n  \"Deku-Tree-Basement-Chest\",\n  \"Deku-Tree-Slingshot-Chest\",\n  \"Deku-Tree-Slingshot-Room-Side-Chest\",\n  \"Queen-Gohma-Heart\",\n  \"Dodongos-Cavern-Map-Chest\",\n  \"Dodongos-Cavern-Compass-Chest\",\n  \"Dodongos-Cavern-Bomb-Flower-Platform\",\n  \"Dodongos-Cavern-Bomb-Bag-Chest\",\n  \"Dodongos-Cavern-End-of-Bridge-Chest\",\n  \"Chest-Above-King-Dodongo\",\n  \"King-Dodongo-Heart\",\n  \"Boomerang-Chest\",\n  \"Jabu-Jabus-Belly-Map-Chest\",\n  \"Jabu-Jabus-Belly-Compass-Chest\",\n  \"Barinade-Heart\",\n  \"Forest-Temple-First-Chest\",\n  \"Forest-Temple-Chest-Behind-Lobby\",\n  \"Forest-Temple-Outside-Hookshot-Chest\",\n  \"Forest-Temple-Well-Chest\",\n  \"Forest-Temple-Map-Chest\",\n  \"Forest-Temple-Falling-Room-Chest\",\n  \"Forest-Temple-Block-Push-Chest\",\n  \"Forest-Temple-Boss-Key-Chest\",\n  \"Forest-Temple-Floormaster-Chest\",\n  \"Forest-Temple-Bow-Chest\",\n  \"Forest-Temple-Red-Poe-Chest\",\n  \"Forest-Temple-Blue-Poe-Chest\",\n  \"Forest-Temple-Near-Boss-Chest\",\n  \"Phantom-Ganon-Heart\",\n  \"Bottom-of-the-Well-Front-Left-Hidden-Wall\",\n  \"Bottom-of-the-Well-Front-Center-Bombable\",\n  \"Bottom-of-the-Well-Right-Bottom-Hidden-Wall\",\n  \"Bottom-of-the-Well-Center-Large-Chest\",\n  \"Bottom-of-the-Well-Center-Small-Chest\",\n  \"Bottom-of-the-Well-Back-Left-Bombable\",\n  \"Bottom-of-the-Well-Freestanding-Key\",\n  \"Bottom-of-the-Well-Defeat-Boss\",\n  \"Bottom-of-the-Well-Invisible-Chest\",\n  \"Bottom-of-the-Well-Underwater-Front-Chest\",\n  \"Bottom-of-the-Well-Underwater-Left-Chest\",\n  \"Bottom-of-the-Well-Basement-Chest\",\n  \"Bottom-of-the-Well-Locked-Pits\",\n  \"Bottom-of-the-Well-Behind-Right-Grate\",\n  \"Fire-Temple-Chest-Near-Boss\",\n  \"Fire-Temple-Fire-Dancer-Chest\",\n  \"Fire-Temple-Boss-Key-Chest\",\n  \"Volvagia-Heart\",\n  \"Fire-Temple-Big-Lava-Room-Open-Chest\",\n  \"Fire-Temple-Big-Lava-Room-Bombable-Chest\",\n  \"Fire-Temple-Boulder-Maze-Lower-Chest\",\n  \"Fire-Temple-Boulder-Maze-Upper-Chest\",\n  \"Fire-Temple-Boulder-Maze-Side-Room\",\n  \"Fire-Temple-Boulder-Maze-Bombable-Pit\",\n  \"Fire-Temple-Scarecrow-Chest\",\n  \"Fire-Temple-Map-Chest\",\n  \"Fire-Temple-Compass-Chest\",\n  \"Fire-Temple-Highest-Goron-Chest\",\n  \"Fire-Temple-Megaton-Hammer-Chest\",\n  \"Ice-Cavern-Map-Chest\",\n  \"Ice-Cavern-Compass-Chest\",\n  \"Ice-Cavern-Iron-Boots-Chest\",\n  \"Ice-Cavern-Freestanding-PoH\",\n  \"Morpha-Heart\",\n  \"Water-Temple-Map-Chest\",\n  \"Water-Temple-Compass-Chest\",\n  \"Water-Temple-Cracked-Wall-Chest\",\n  \"Water-Temple-Torches-Chest\",\n  \"Water-Temple-Dragon-Chest\",\n  \"Water-Temple-Central-Bow-Target-Chest\",\n  \"Water-Temple-Boss-Key-Chest\",\n  \"Water-Temple-Central-Pillar-Chest\",\n  \"Water-Temple-Dark-Link-Chest\",\n  \"Water-Temple-River-Chest\",\n  \"Shadow-Temple-Map-Chest\",\n  \"Shadow-Temple-Hover-Boots-Chest\",\n  \"Shadow-Temple-Compass-Chest\",\n  \"Shadow-Temple-Early-Silver-Rupee-Chest\",\n  \"Shadow-Temple-Invisible-Blades-Visible-Chest\",\n  \"Shadow-Temple-Invisible-Blades-Invisible-Chest\",\n  \"Shadow-Temple-Falling-Spikes-Lower-Chest\",\n  \"Shadow-Temple-Falling-Spikes-Upper-Chest\",\n  \"Shadow-Temple-Falling-Spikes-Switch-Chest\",\n  \"Shadow-Temple-Invisible-Spikes-Chest\",\n  \"Shadow-Temple-Freestanding-Key\",\n  \"Shadow-Temple-Wind-Hint-Chest\",\n  \"Shadow-Temple-After-Wind-Enemy-Chest\",\n  \"Shadow-Temple-After-Wind-Hidden-Chest\",\n  \"Shadow-Temple-Spike-Walls-Left-Chest\",\n  \"Shadow-Temple-Boss-Key-Chest\",\n  \"Shadow-Temple-Hidden-Floormaster-Chest\",\n  \"Bongo-Bongo-Heart\",\n  \"Gerudo-Training-Grounds-Lobby-Left-Chest\",\n  \"Gerudo-Training-Grounds-Lobby-Right-Chest\",\n  \"Gerudo-Training-Grounds-Stalfos-Chest\",\n  \"Gerudo-Training-Grounds-Beamos-Chest\",\n  \"Gerudo-Training-Grounds-Hidden-Ceiling-Chest\",\n  \"Gerudo-Training-Grounds-Maze-Path-First-Chest\",\n  \"Gerudo-Training-Grounds-Maze-Path-Second-Chest\",\n  \"Gerudo-Training-Grounds-Maze-Path-Third-Chest\",\n  \"Gerudo-Training-Grounds-Maze-Path-Final-Chest\",\n  \"Gerudo-Training-Grounds-Maze-Right-Central-Chest\",\n  \"Gerudo-Training-Grounds-Maze-Right-Side-Chest\",\n  \"Gerudo-Training-Grounds-Freestanding-Key\",\n  \"Gerudo-Training-Grounds-Underwater-Silver-Rupee-Chest\",\n  \"Gerudo-Training-Grounds-Hammer-Room-Clear-Chest\",\n  \"Gerudo-Training-Grounds-Hammer-Room-Switch-Chest\",\n  \"Gerudo-Training-Grounds-Eye-Statue-Chest\",\n  \"Gerudo-Training-Grounds-Near-Scarecrow-Chest\",\n  \"Gerudo-Training-Grounds-Before-Heavy-Block-Chest\",\n  \"Gerudo-Training-Grounds-Heavy-Block-First-Chest\",\n  \"Gerudo-Training-Grounds-Heavy-Block-Second-Chest\",\n  \"Gerudo-Training-Grounds-Heavy-Block-Third-Chest\",\n  \"Gerudo-Training-Grounds-Heavy-Block-Fourth-Chest\",\n  \"Spirit-Temple-Child-Left-Chest\",\n  \"Spirit-Temple-Child-Right-Chest\",\n  \"Spirit-Temple-Child-Climb-East-Chest\",\n  \"Spirit-Temple-Child-Climb-North-Chest\",\n  \"Spirit-Temple-Compass-Chest\",\n  \"Spirit-Temple-Early-Adult-Right-Chest\",\n  \"Spirit-Temple-First-Mirror-Right-Chest\",\n  \"Spirit-Temple-First-Mirror-Left-Chest\",\n  \"Spirit-Temple-Map-Chest\",\n  \"Spirit-Temple-Sun-Block-Room-Chest\",\n  \"Spirit-Temple-Statue-Hand-Chest\",\n  \"Spirit-Temple-NE-Main-Room-Chest\",\n  \"Silver-Gauntlets-Chest\",\n  \"Mirror-Shield-Chest\",\n  \"Spirit-Temple-Near-Four-Armos-Chest\",\n  \"Spirit-Temple-Hallway-Left-Invisible-Chest\",\n  \"Spirit-Temple-Hallway-Right-Invisible-Chest\",\n  \"Spirit-Temple-Boss-Key-Chest\",\n  \"Spirit-Temple-Topmost-Chest\",\n  \"Twinrova-Heart\",\n  \"Ganons-Castle-Forest-Trial-Chest\",\n  \"Ganons-Castle-Water-Trial-Left-Chest\",\n  \"Ganons-Castle-Water-Trial-Right-Chest\",\n  \"Ganons-Castle-Shadow-Trial-First-Chest\",\n  \"Ganons-Castle-Shadow-Trial-Second-Chest\",\n  \"Ganons-Castle-Spirit-Trial-First-Chest\",\n  \"Ganons-Castle-Spirit-Trial-Second-Chest\",\n  \"Ganons-Castle-Light-Trial-First-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-Second-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-Third-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-First-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Second-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Third-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Invisible-Enemies-Chest\",\n  \"Ganons-Castle-Light-Trial-Lullaby-Chest\"\n];\n","import React, { Component } from 'react';\nimport DroppableLocation from './DroppableLocation';\nimport { LOCATIONS, ITEMS, ITEM_COPIES, JUNK_POOL } from './Constants';\nimport { Draggable, DragDropContext } from 'react-beautiful-dnd';\nimport { MersenneTwister19937, pick as randomPick } from 'random-js';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    textAlign: 'center',\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst junkPool = {...JUNK_POOL};\nconst mt = MersenneTwister19937.autoSeed();\n\nconst assignJunk = () => {\n    let keys = Object.keys(junkPool);\n    if(!keys.length) {\n        throw Error('Exhausted junk pool while assigning blank locations!');\n    }\n    let item = randomPick(mt, keys);\n    junkPool[item] -= 1;\n    if(junkPool[item] === 0) {\n        delete junkPool[item];\n    }\n    return item;\n}\n\nexport default class Locations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            unassigned: []\n        };\n        for(let item of ITEMS) {\n            for(let i = 0, numCopies = ITEM_COPIES[item]||1; i < numCopies; ++i) {\n                this.state.unassigned.push(item+(numCopies > 1 ? '-' + (i+1) : ''));\n            }\n        }\n        for(let location of LOCATIONS) {\n            this.state[location] = [];\n        }\n    }\n\n    reset = () => {\n        let state = {\n            unassigned: []\n        };\n        for(let item of ITEMS) {\n            for(let i = 0, numCopies = ITEM_COPIES[item]||1; i < numCopies; ++i) {\n                state.unassigned.push(item+(numCopies > 1 ? '-' + (i+1) : ''));\n            }\n        }\n        for(let location of LOCATIONS) {\n            state[location] = [];\n        }\n        this.setState(state);\n    }\n\n    getList = id => this.state[id];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n\n            let state = { [source.droppableId]: items };\n\n            this.setState(state);\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                ...result\n            });\n        }\n    };\n\n    export = () => {\n        try {\n            let result = {};\n            Object.entries(this.state).forEach(([key, value]) => {\n                if(key !== 'unassigned') {\n                    if(value.length) {\n                        let [item] = value;\n                        if(/^([a-z]|\\s)+(?:\\s\\d+)$/i.test(item)) {\n                            item = item.split('-').slice(0, -1).join(' ');\n                        } else {\n                            item = item.split('-').join(' ');\n                        }\n                        result[key.split('-').join(' ')] = item;\n                    } else {\n                        result[key.split('-').join(' ')] = assignJunk();\n                    }\n                }\n            });\n            let json = '\"locations\": ' + JSON.stringify(result);\n            let html = \"<code>\" + json + \"</code>\";\n            let blob = new Blob([html], {type: 'text/html'});\n            let blobURL = URL.createObjectURL(blob);\n            window.open(blobURL);\n        } catch(e) {\n            alert(e.message)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <button type='button' name='reset' onClick={this.reset}>Reset</button>\n                <button style={{float: 'right'}} type='button' name='export' onClick={this.export}>Export</button>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div style={{display: 'inline-block'}}>\n                        <div style={{display: 'inline-block', marginLeft: '20px', maxHeight: '95vh', overflowY: 'auto'}}>\n                            <DroppableLocation\n                                key='unassigned'\n                                droppableId='unassigned'\n                                name='Unassigned'>\n                                {this.state.unassigned.map((item, index) => (\n                                    <Draggable\n                                        key={item}\n                                        draggableId={item}\n                                        index={index}>\n                                        {(provided, snapshot) => (\n                                            <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={getItemStyle(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                )}>\n                                                {item.split('-').join(' ')}\n                                            </div>\n                                        )}    \n                                    </Draggable>\n                                ))}\n                            </DroppableLocation>\n                        </div>\n                        <div style={\n                            {\n                                width: '80%',\n                                float: 'right',\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                justifyContent: 'space-around',\n                                maxHeight: '95vh',\n                                overflowY: 'scroll'\n                            }\n                        }>\n                            {LOCATIONS.map((location) => (\n                                <DroppableLocation\n                                    key={location}\n                                    droppableId={location}\n                                    name={location.split('-').join(' ')}\n                                    style={{flex: 1}}\n                                    isDropDisabled={this.state[location].length > 0}>\n                                    {this.state[location].map((item, index) => (\n                                        <Draggable\n                                            key={item}\n                                            draggableId={item}\n                                            index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                    ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                    style={getItemStyle(\n                                                        snapshot.isDragging,\n                                                        provided.draggableProps.style\n                                                    )}>\n                                                    {item.split('-').join(' ')}\n                                                </div>\n                                            )}    \n                                        </Draggable>\n                                    ))}\n                                </DroppableLocation>\n                            ))}\n                        </div>\n                    </div>\n                </DragDropContext>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Locations from './Locations';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Locations />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}