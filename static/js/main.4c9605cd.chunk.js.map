{"version":3,"sources":["DroppableLocation.js","Constants.js","Locations.js","App.js","serviceWorker.js","index.js"],"names":["DroppableLocation","_this","this","react_default","a","createElement","style","minHeight","position","fontSize","fontWeight","textAlign","wordBreak","maxWidth","props","name","react_beautiful_dnd_esm","Object","assign","placeholder","provided","snapshot","ref","innerRef","isDraggingOver","id","droppableId","background","padding","width","children","Component","ITEMS","concat","ITEM_COPIES","Bow","Deku-Nut-Capacity","Deku-Stick-Capacity","Heart-Container","Hylian-Shield","Ocarina","Piece-of-Heart","Progressive-Hookshot","Progressive-Scale","Progressive-Strength-Upgrade","Progressive-Wallet","Slingshot","LOCATIONS","Bosses","Songs","Kokiri Forest","Lost Woods","Sacred Forest Meadow","Hyrule Field","Lake Hylia","Gerudo Valley","Gerudo Fortress","Wasteland","Desert Colossus","Market","Hyrule Castle","Ganons Castle","Kakariko Village","Death Mountain Trail","Goron City","Death Mountain Crater","Zoras River","Zoras Domain","Lon Lon Ranch","Deku Tree","Dodongos Cavern","Jabu Jabus Belly","Forest Temple","Bottom of the Well","Fire Temple","Ice Cavern","Water Temple","Shadow Temple","Gerudo Training Grounds","Spirit Temple","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","index","getItemStyle","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","junkPool","Arrows (10)","Arrows (30)","Arrows (5)","Bombchus (10)","Bombchus (20)","Bombchus (5)","Bombs (10)","Bombs (20)","Bombs (5)","Deku Nuts (10)","Deku Nuts (5)","Deku Seeds (30)","Deku Shield","Deku Stick (1)","Ice Trap","Recovery Heart","Rupee (1)","Rupees (20)","Rupees (200)","Rupees (5)","Rupees (50)","mt","MersenneTwister19937","autoSeed","assignJunk","keys","length","Error","item","randomPick","Locations","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","reset","state","unassigned","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","i","numCopies","push","err","return","_arr","values","_i","locationGroup","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setState","getList","onDragEnd","items","defineProperty","export","entries","forEach","_ref","_ref2","key","test","split","slice","join","json","JSON","stringify","blob","Blob","type","blobURL","URL","createObjectURL","window","open","e","alert","message","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_arr2","_i2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","location","_this2","onClick","float","display","marginLeft","maxHeight","overflowY","DroppableLocation_DroppableLocation","map","draggableId","draggableProps","dragHandleProps","esm","locationName","locationList","flexWrap","justifyContent","flex","isDropDisabled","App","Locations_Locations","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8RAYqBA,mLACR,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,UAAW,IAAKC,SAAU,aACnCL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACG,SAAU,GAAIC,WAAY,OAAQC,UAAW,SAAUC,UAAW,aAAcC,SAAU,MAAOX,KAAKY,MAAMC,OAE7HZ,EAAAC,EAAAC,cAACW,EAAA,EAADC,OAAAC,OAAA,GAAehB,KAAKY,MAApB,CAA2BK,YAAY,SAClC,SAACC,EAAUC,GAAX,OACGlB,EAAAC,EAAAC,cAAA,OACIiB,IAAKF,EAASG,SACdjB,OAlBNkB,EAkB0BH,EAASG,eAlBnBC,EAkBmCxB,EAAKa,MAAMY,YAlBtC,CAC1CC,WAAYH,EAAiB,YAAc,YAC3CI,QAJS,EAKTC,MAAO,IACPtB,UAAkB,eAAPkB,EAAsB,IAAM,MAgBdxB,EAAKa,MAAMgB,SACXV,EAASD,aArBjB,IAACK,EAAgBC,YAOSM,aCiFlCC,EAAK,GAAAC,OA7FmB,CACnC,iBACA,aACA,gBACA,kBACA,mBACA,iBACA,kBACA,mBACA,oBAGmB,CACnB,iBACA,cACA,eACA,mBACA,qBACA,mBACA,oBACA,cACA,oBACA,iBACA,eACA,YACA,kBAGyB,CACzB,iBACA,WACA,YACA,0BACA,qBACA,yBACA,SACA,MACA,oBACA,cACA,sBACA,YACA,iBACA,cACA,cACA,SACA,kBACA,cACA,gBACA,aACA,aACA,eACA,gBACA,eACA,cACA,gBACA,cACA,UACA,uCACA,iBACA,aACA,uBACA,oBACA,+BACA,qBACA,iBACA,YACA,iBACA,YACA,eA2BWC,EAAc,CACzBC,IAAO,EACPC,oBAAqB,EACrBC,sBAAuB,EACvBC,kBAAmB,EACnBC,gBAAiB,EACjBC,QAAW,EACXC,iBAAkB,GAClBC,uBAAwB,EACxBC,oBAAqB,EACrBC,+BAAgC,EAChCC,qBAAsB,EACtBC,UAAa,GAwYFC,EAAY,CACvBC,OA9WoB,CAClB,eACA,cACA,eACA,WACA,gBACA,WACA,SACA,cACA,YAsWFC,MAnW4B,CAC5B,kBACA,oBACA,4BACA,oBACA,kBACA,iBACA,oBACA,mBACA,2BACA,kBACA,kBACA,uBAwVAC,gBArV2B,CACzB,qBACA,sBACA,uBACA,yBACA,0BACA,kBACA,qCA+UFC,aA5UwB,CACtB,YACA,sBACA,kBACA,mCACA,kCACF,0BACA,6BACA,yCAqUAC,uBAlUkC,CAChC,uBAkUFC,eA/T0B,CACxB,kBACA,+BACF,6CACA,sCACA,sCACA,mCA0TAC,aAvTwB,CACtB,oBACA,iBACA,8BACA,oBACA,gBACA,iBAkTFC,gBA/S2B,CACzB,2CACA,uCACA,oCA6SFC,kBA1S6B,CAC3B,gCACA,gCACA,iCAwSFC,UArSuB,CACrB,qCAqSFC,kBAlS6B,CAC3B,4BACA,gCAiSFC,OA9RoB,CAClB,QACA,cACF,yBACA,2BACA,iCACA,sBACA,YAwRAC,gBArR2B,CACzB,YACA,8BAoRFC,gBAjR2B,CACzB,6BACA,8BACA,mCACF,uCACA,wCACA,yCACA,0CACA,yCACA,0CACA,6CACA,8CACA,6CACA,8CACA,+CACA,8CACA,oDACA,2CAiQAC,mBA9P8B,CAC5B,cACA,gBACA,iBACA,2BACA,2BACA,2BACA,2BACA,2BACA,8BACA,4BACA,yBACA,6BACA,oBACA,qBACA,0BACA,uBACA,iBACA,8BACA,sBACF,8BA2OAC,uBAxOkC,CAChC,gCACA,4BACA,WACA,+BACA,gCAoOFC,aAjOwB,CACtB,iCACA,6BACA,8BACA,kCACA,yBACA,iBACA,gBA2NFC,wBAxNmC,CACjC,kCACA,qCACA,sBACA,8BAqNFC,cAlNyB,CACvB,oBACA,oBACA,oCACA,oCACA,wCA8MFC,eA3M0B,CACxB,kBACA,yBACA,mBACA,0CACA,yCACA,+BAsMFC,gBAnM2B,CACzB,kBACA,kCAkMFC,YA/LuB,CACrB,wBACA,0BACA,oCACA,2BACA,4BACA,sCACA,qBAyLFC,kBAtL6B,CAC3B,4BACA,gCACA,uCACA,iCACA,sCACA,2BACA,sBAgLFC,mBA7K8B,CAC5B,kBACA,6BACA,iCACA,kBA0KFC,gBAvK2B,CACzB,4BACA,mCACA,uCACA,2BACA,0BACA,mCACA,iCACA,+BACA,kCACA,0BACA,8BACA,+BACA,gCACA,uBA0JFC,qBAvJgC,CAC9B,4CACA,2CACA,8CACA,wCACA,wCACA,wCACA,sCACA,iCACA,qCACA,4CACA,2CACA,oCACA,iCACA,yCA0IFC,cAvIyB,CACvB,8BACA,gCACA,6BACA,iBACA,uCACA,2CACA,uCACA,uCACA,qCACA,wCACA,8BACA,wBACA,4BACA,kCACA,oCAyHFC,aAtHwB,CACtB,uBACA,2BACA,8BACA,+BAmHFC,eAhH0B,CACxB,eACA,yBACA,6BACA,kCACA,6BACA,4BACA,wCACA,8BACA,oCACA,+BACA,4BAsGFC,gBAnG2B,CACzB,0BACA,kCACA,8BACA,yCACA,+CACA,iDACA,2CACA,2CACA,4CACA,uCACA,iCACA,gCACA,uCACA,wCACA,uCACA,+BACA,yCACA,qBAkFFC,0BA/EqC,CACnC,2CACA,4CACA,wCACA,uCACA,+CACA,gDACA,iDACA,gDACA,gDACA,mDACA,gDACA,2CACA,wDACA,kDACA,mDACA,2CACA,+CACA,mDACA,kDACA,mDACA,kDACA,oDA0DFC,gBAvD2B,CACzB,iCACA,kCACA,uCACA,wCACA,8BACA,wCACA,yCACA,wCACA,0BACA,qCACA,kCACA,mCACA,yBACA,sBACA,sCACA,6CACA,8CACA,+BACA,8BACA,mCCveEC,SAAU,SAACC,EAAMC,EAAYC,GAC/B,IAAMC,EAASC,MAAMC,KAAKL,GADkBM,EAE1BH,EAAOI,OAAON,EAAY,GAArCO,EAFqCxE,OAAAyE,EAAA,EAAAzE,CAAAsE,EAAA,MAK5C,OAFAH,EAAOI,OAAOL,EAAU,EAAGM,GAEpBL,IAMLO,EAAO,SAACC,EAAQC,EAAaC,EAAiBC,GAChD,IAAMC,EAAcX,MAAMC,KAAKM,GACzBK,EAAYZ,MAAMC,KAAKO,GAF4CK,EAGvDF,EAAYR,OAAOM,EAAgBK,MAAO,GAArDV,EAHkExE,OAAAyE,EAAA,EAAAzE,CAAAiF,EAAA,MAKzED,EAAUT,OAA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","file":"static/js/main.4c9605cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getListStyle = (isDraggingOver, id) => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 180,\n    minHeight: id === 'unassigned' ? 550 : 50\n});\n\nexport default class DroppableLocation extends Component {\n    render() {\n        return (\n            <div style={{minHeight: 175, position: 'relative'}}>\n                <div>\n                    <div style={{fontSize: 13, fontWeight: 'bold', textAlign: 'center', wordBreak: 'break-word', maxWidth: 196}}>{this.props.name}</div>\n                </div>\n                <Droppable {...this.props} placeholder='Junk'>\n                    {(provided, snapshot) => (\n                        <div\n                            ref={provided.innerRef}\n                            style={getListStyle(snapshot.isDraggingOver, this.props.droppableId)}\n                        >\n                            {this.props.children}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </div>\n        );\n    }\n}","export const STONES_AND_MEDALLIONS = [\n  \"Kokiri-Emerald\",\n  \"Goron-Ruby\",\n  \"Zora-Sapphire\",\n  \"Light-Medallion\",\n  \"Forest-Medallion\",\n  \"Fire-Medallion\",\n  \"Water-Medallion\",\n  \"Shadow-Medallion\",\n  \"Spirit-Medallion\"\n];\n\nexport const SONGS = [\n  \"Bolero-of-Fire\",\n  \"Eponas-Song\",\n  \"Farores-Wind\",\n  \"Minuet-of-Forest\",\n  \"Nocturne-of-Shadow\",\n  \"Prelude-of-Light\",\n  \"Requiem-of-Spirit\",\n  \"Sarias-Song\",\n  \"Serenade-of-Water\",\n  \"Song-of-Storms\",\n  \"Song-of-Time\",\n  \"Suns-Song\",\n  \"Zeldas-Lullaby\"\n];\n\nexport const MAJOR_ITEMS = [\n  \"Biggoron-Sword\",\n  \"Bomb-Bag\",\n  \"Boomerang\",\n  \"Bottle-with-Blue-Potion\",\n  \"Bottle-with-Letter\",\n  \"Bottle-with-Red-Potion\",\n  \"Bottle\",\n  \"Bow\",\n  \"Deku-Nut-Capacity\",\n  \"Deku-Shield\",\n  \"Deku-Stick-Capacity\",\n  \"Dins-Fire\",\n  \"Double-Defense\",\n  \"Fire-Arrows\",\n  \"Goron-Tunic\",\n  \"Hammer\",\n  \"Heart-Container\",\n  \"Hover-Boots\",\n  \"Hylian-Shield\",\n  \"Ice-Arrows\",\n  \"Iron-Boots\",\n  \"Kokiri-Sword\",\n  \"Lens-of-Truth\",\n  \"Light-Arrows\",\n  \"Magic-Meter\",\n  \"Mirror-Shield\",\n  \"Nayrus-Love\",\n  \"Ocarina\",\n  \"Piece-of-Heart-(Treasure-Chest-Game)\",\n  \"Piece-of-Heart\",\n  \"Pocket-Egg\",\n  \"Progressive-Hookshot\",\n  \"Progressive-Scale\",\n  \"Progressive-Strength-Upgrade\",\n  \"Progressive-Wallet\",\n  \"Recovery-Heart\",\n  \"Slingshot\",\n  \"Stone-of-Agony\",\n  \"Weird-Egg\",\n  \"Zora-Tunic\"\n];\n\nexport const JUNK = [\n  \"Arrows-(10)\",\n  \"Arrows-(30)\",\n  \"Arrows-(5)\",\n  \"Bombchus-(10)\",\n  \"Bombchus-(20)\",\n  \"Bombchus-(5)\",\n  \"Bombs-(10)\",\n  \"Bombs-(20)\",\n  \"Bombs-(5)\",\n  \"Deku-Nuts-(10)\",\n  \"Deku-Nuts-(5)\",\n  \"Deku-Seeds-(30)\",\n  \"Deku-Stick-(1)\",\n  \"Ice-Trap\",\n  \"Rupee-(1)\",\n  \"Rupees-(20)\",\n  \"Rupees-(200)\",\n  \"Rupees-(5)\",\n  \"Rupees-(50)\"\n];\n\nexport const ITEMS = [...STONES_AND_MEDALLIONS, ...SONGS, ...MAJOR_ITEMS];\n\nexport const ITEM_COPIES = {\n  \"Bow\": 3,\n  \"Deku-Nut-Capacity\": 3,\n  \"Deku-Stick-Capacity\": 3,\n  \"Heart-Container\": 8,\n  \"Hylian-Shield\": 2,\n  \"Ocarina\": 2,\n  \"Piece-of-Heart\": 35,\n  \"Progressive-Hookshot\": 2,\n  \"Progressive-Scale\": 2,\n  \"Progressive-Strength-Upgrade\": 3,\n  \"Progressive-Wallet\": 2,\n  \"Slingshot\": 3\n};\n\nexport const JUNK_POOL = {\n  \"Arrows (10)\": 8,\n  \"Arrows (30)\": 6,\n  \"Arrows (5)\": 6,\n  \"Bombchus (10)\": 3,\n  \"Bombchus (20)\": 1,\n  \"Bombchus (5)\": 1,\n  \"Bombs (10)\": 2,\n  \"Bombs (20)\": 2,\n  \"Bombs (5)\": 4,\n  \"Deku Nuts (10)\": 1,\n  \"Deku Nuts (5)\": 2,\n  \"Deku Seeds (30)\": 3,\n  \"Deku Shield\": 4,\n  \"Deku Stick (1)\": 2,\n  \"Ice Trap\": 6,\n  \"Recovery Heart\": 11,\n  \"Rupee (1)\": 1,\n  \"Rupees (20)\": 8,\n  \"Rupees (200)\": 6,\n  \"Rupees (5)\": 19,\n  \"Rupees (50)\": 7\n};\n\nexport const BOSSES = [\n    \"Links-Pocket\",\n    \"Queen-Gohma\",\n    \"King-Dodongo\",\n    \"Barinade\",\n    \"Phantom-Ganon\",\n    \"Volvagia\",\n    \"Morpha\",\n    \"Bongo-Bongo\",\n    \"Twinrova\",\n];\n\nexport const SONG_LOCATIONS = [\n  \"Song-from-Saria\",\n  \"Sheik-Forest-Song\",\n  \"Song-from-Ocarina-of-Time\",\n  \"Sheik-at-Colossus\",\n  \"Sheik-at-Temple\",\n  \"Impa-at-Castle\",\n  \"Sheik-in-Kakariko\",\n  \"Song-at-Windmill\",\n  \"Song-from-Composer-Grave\",\n  \"Sheik-in-Crater\",\n  \"Song-from-Malon\",\n  \"Sheik-in-Ice-Cavern\",\n];\n\nexport const KOKIRI_FOREST = [\n    \"Kokiri-Sword-Chest\",\n    \"Mido-Chest-Top-Left\",\n    \"Mido-Chest-Top-Right\",\n    \"Mido-Chest-Bottom-Left\",\n    \"Mido-Chest-Bottom-Right\",\n    \"Gift-from-Saria\",\n    \"Kokiri-Forest-Storms-Grotto-Chest\",\n];\n\nexport const LOST_WOODS = [\n    \"Skull-Kid\",\n    \"Ocarina-Memory-Game\",\n    \"Target-in-Woods\",\n    \"LW-Deku-Scrub-Deku-Stick-Upgrade\",\n    \"Lost-Woods-Generic-Grotto-Chest\",\n  \"Deku-Theater-Skull-Mask\",\n  \"Deku-Theater-Mask-of-Truth\",\n  \"LW-Grotto-Deku-Scrub-Deku-Nut-Upgrade\",\n];\n\nexport const SACRED_FOREST_MEADOW = [\n    \"Wolfos-Grotto-Chest\",\n];\n\nexport const HYRULE_FIELD = [\n    \"Ocarina-of-Time\",\n    \"Remote-Southern-Grotto-Chest\",\n  \"Field-Near-Lake-Outside-Fence-Grotto-Chest\",\n  \"HF-Grotto-Deku-Scrub-Piece-of-Heart\",\n  \"Field-West-Castle-Town-Grotto-Chest\",\n  \"Tektite-Grotto-Freestanding-PoH\",\n];\n\nexport const LAKE_HYLIA = [\n    \"Underwater-Bottle\",\n    \"Lake-Hylia-Sun\",\n    \"Lake-Hylia-Freestanding-PoH\",\n    \"Diving-in-the-Lab\",\n    \"Child-Fishing\",\n    \"Adult-Fishing\",\n];\n\nexport const GERUDO_VALLEY = [\n    \"Gerudo-Valley-Waterfall-Freestanding-PoH\",\n    \"Gerudo-Valley-Crate-Freestanding-PoH\",\n    \"Gerudo-Valley-Hammer-Rocks-Chest\"\n];\n\nexport const GERUDO_FORTRESS = [\n    \"Gerudo-Fortress-Rooftop-Chest\",\n    \"Horseback-Archery-1000-Points\",\n    \"Horseback-Archery-1500-Points\",\n];\n\nexport const WASTELAND = [\n    \"Haunted-Wasteland-Structure-Chest\",\n];\n\nexport const DESERT_COLOSSUS = [\n    \"Colossus-Freestanding-PoH\",\n    \"Desert-Colossus-Fairy-Reward\",\n]\n\nexport const MARKET = [\n    \"Zelda\",\n    \"10-Big-Poes\",\n  \"Child-Shooting-Gallery\",\n  \"Bombchu-Bowling-Bomb-Bag\",\n  \"Bombchu-Bowling-Piece-of-Heart\",\n  \"Treasure-Chest-Game\",\n  \"Dog-Lady\",\n]\n\nexport const HYRULE_CASTLE = [\n    \"Malon-Egg\",\n    \"Hyrule-Castle-Fairy-Reward\"\n];\n\nexport const GANONS_CASTLE = [\n    \"Ganons-Castle-Fairy-Reward\",\n    \"Ganons-Tower-Boss-Key-Chest\",\n    \"Ganons-Castle-Forest-Trial-Chest\",\n  \"Ganons-Castle-Water-Trial-Left-Chest\",\n  \"Ganons-Castle-Water-Trial-Right-Chest\",\n  \"Ganons-Castle-Shadow-Trial-First-Chest\",\n  \"Ganons-Castle-Shadow-Trial-Second-Chest\",\n  \"Ganons-Castle-Spirit-Trial-First-Chest\",\n  \"Ganons-Castle-Spirit-Trial-Second-Chest\",\n  \"Ganons-Castle-Light-Trial-First-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-Second-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-Third-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-First-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Second-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Third-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Invisible-Enemies-Chest\",\n  \"Ganons-Castle-Light-Trial-Lullaby-Chest\"\n]\n\nexport const KAKARIKO_VILLAGE = [\n    \"Man-on-Roof\",\n    \"Anju-as-Adult\",\n    \"Anjus-Chickens\",\n    \"10-Gold-Skulltula-Reward\",\n    \"20-Gold-Skulltula-Reward\",\n    \"30-Gold-Skulltula-Reward\",\n    \"40-Gold-Skulltula-Reward\",\n    \"50-Gold-Skulltula-Reward\",\n    \"Impa-House-Freestanding-PoH\",\n    \"Windmill-Freestanding-PoH\",\n    \"Adult-Shooting-Gallery\",\n    \"Graveyard-Freestanding-PoH\",\n    \"Gravedigging-Tour\",\n    \"Shield-Grave-Chest\",\n    \"Heart-Piece-Grave-Chest\",\n    \"Composer-Grave-Chest\",\n    \"Hookshot-Chest\",\n    \"Dampe-Race-Freestanding-PoH\",\n    \"Redead-Grotto-Chest\",\n  \"Kakariko-Back-Grotto-Chest\",\n];\n\nexport const DEATH_MOUNTAIN_TRAIL = [\n    \"Death-Mountain-Bombable-Chest\",\n    \"DM-Trail-Freestanding-PoH\",\n    \"Biggoron\",\n    \"Mountain-Summit-Fairy-Reward\",\n    \"Mountain-Storms-Grotto-Chest\",\n];\n\nexport const GORON_CITY = [\n    \"Goron-City-Leftmost-Maze-Chest\",\n    \"Goron-City-Left-Maze-Chest\",\n    \"Goron-City-Right-Maze-Chest\",\n    \"Goron-City-Pot-Freestanding-PoH\",\n    \"Rolling-Goron-as-Child\",\n    \"Link-the-Goron\",\n    \"Darunias-Joy\",\n];\n\nexport const DEATH_MOUNTAIN_CRATER = [\n    \"DM-Crater-Wall-Freestanding-PoH\",\n    \"DM-Crater-Volcano-Freestanding-PoH\",\n    \"Crater-Fairy-Reward\",\n    \"Top-of-Crater-Grotto-Chest\",\n];\n\nexport const ZORAS_RIVER = [\n    \"Frog-Ocarina-Game\",\n    \"Frogs-in-the-Rain\",\n    \"Zora-River-Lower-Freestanding-PoH\",\n    \"Zora-River-Upper-Freestanding-PoH\",\n    \"Zora-River-Plateau-Open-Grotto-Chest\",\n];\n\nexport const ZORAS_DOMAIN = [\n    \"Diving-Minigame\",\n    \"Zoras-Domain-Torch-Run\",\n    \"King-Zora-Thawed\",\n    \"Zoras-Fountain-Iceberg-Freestanding-PoH\",\n    \"Zoras-Fountain-Bottom-Freestanding-PoH\",\n    \"Zoras-Fountain-Fairy-Reward\",\n];\n\nexport const LON_LON_RANCH = [\n    \"Talons-Chickens\",\n    \"Lon-Lon-Tower-Freestanding-PoH\",\n];\n\nexport const DEKU_TREE = [\n    \"Deku-Tree-Lobby-Chest\",\n    \"Deku-Tree-Compass-Chest\",\n    \"Deku-Tree-Compass-Room-Side-Chest\",\n    \"Deku-Tree-Basement-Chest\",\n    \"Deku-Tree-Slingshot-Chest\",\n    \"Deku-Tree-Slingshot-Room-Side-Chest\",\n    \"Queen-Gohma-Heart\",\n];\n\nexport const DODONGOS_CAVERN = [\n    \"Dodongos-Cavern-Map-Chest\",\n    \"Dodongos-Cavern-Compass-Chest\",\n    \"Dodongos-Cavern-Bomb-Flower-Platform\",\n    \"Dodongos-Cavern-Bomb-Bag-Chest\",\n    \"Dodongos-Cavern-End-of-Bridge-Chest\",\n    \"Chest-Above-King-Dodongo\",\n    \"King-Dodongo-Heart\",\n];\n\nexport const JABU_JABUS_BELLY = [\n    \"Boomerang-Chest\",\n    \"Jabu-Jabus-Belly-Map-Chest\",\n    \"Jabu-Jabus-Belly-Compass-Chest\",\n    \"Barinade-Heart\",\n];\n\nexport const FOREST_TEMPLE = [\n    \"Forest-Temple-First-Chest\",\n    \"Forest-Temple-Chest-Behind-Lobby\",\n    \"Forest-Temple-Outside-Hookshot-Chest\",\n    \"Forest-Temple-Well-Chest\",\n    \"Forest-Temple-Map-Chest\",\n    \"Forest-Temple-Falling-Room-Chest\",\n    \"Forest-Temple-Block-Push-Chest\",\n    \"Forest-Temple-Boss-Key-Chest\",\n    \"Forest-Temple-Floormaster-Chest\",\n    \"Forest-Temple-Bow-Chest\",\n    \"Forest-Temple-Red-Poe-Chest\",\n    \"Forest-Temple-Blue-Poe-Chest\",\n    \"Forest-Temple-Near-Boss-Chest\",\n    \"Phantom-Ganon-Heart\",\n];\n\nexport const BOTTOM_OF_THE_WELL = [\n    \"Bottom-of-the-Well-Front-Left-Hidden-Wall\",\n    \"Bottom-of-the-Well-Front-Center-Bombable\",\n    \"Bottom-of-the-Well-Right-Bottom-Hidden-Wall\",\n    \"Bottom-of-the-Well-Center-Large-Chest\",\n    \"Bottom-of-the-Well-Center-Small-Chest\",\n    \"Bottom-of-the-Well-Back-Left-Bombable\",\n    \"Bottom-of-the-Well-Freestanding-Key\",\n    \"Bottom-of-the-Well-Defeat-Boss\",\n    \"Bottom-of-the-Well-Invisible-Chest\",\n    \"Bottom-of-the-Well-Underwater-Front-Chest\",\n    \"Bottom-of-the-Well-Underwater-Left-Chest\",\n    \"Bottom-of-the-Well-Basement-Chest\",\n    \"Bottom-of-the-Well-Locked-Pits\",\n    \"Bottom-of-the-Well-Behind-Right-Grate\",\n];\n\nexport const FIRE_TEMPLE = [\n    \"Fire-Temple-Chest-Near-Boss\",\n    \"Fire-Temple-Fire-Dancer-Chest\",\n    \"Fire-Temple-Boss-Key-Chest\",\n    \"Volvagia-Heart\",\n    \"Fire-Temple-Big-Lava-Room-Open-Chest\",\n    \"Fire-Temple-Big-Lava-Room-Bombable-Chest\",\n    \"Fire-Temple-Boulder-Maze-Lower-Chest\",\n    \"Fire-Temple-Boulder-Maze-Upper-Chest\",\n    \"Fire-Temple-Boulder-Maze-Side-Room\",\n    \"Fire-Temple-Boulder-Maze-Bombable-Pit\",\n    \"Fire-Temple-Scarecrow-Chest\",\n    \"Fire-Temple-Map-Chest\",\n    \"Fire-Temple-Compass-Chest\",\n    \"Fire-Temple-Highest-Goron-Chest\",\n    \"Fire-Temple-Megaton-Hammer-Chest\",\n];\n\nexport const ICE_CAVERN = [\n    \"Ice-Cavern-Map-Chest\",\n    \"Ice-Cavern-Compass-Chest\",\n    \"Ice-Cavern-Iron-Boots-Chest\",\n    \"Ice-Cavern-Freestanding-PoH\",\n];\n\nexport const WATER_TEMPLE = [\n    \"Morpha-Heart\",\n    \"Water-Temple-Map-Chest\",\n    \"Water-Temple-Compass-Chest\",\n    \"Water-Temple-Cracked-Wall-Chest\",\n    \"Water-Temple-Torches-Chest\",\n    \"Water-Temple-Dragon-Chest\",\n    \"Water-Temple-Central-Bow-Target-Chest\",\n    \"Water-Temple-Boss-Key-Chest\",\n    \"Water-Temple-Central-Pillar-Chest\",\n    \"Water-Temple-Dark-Link-Chest\",\n    \"Water-Temple-River-Chest\",\n];\n\nexport const SHADOW_TEMPLE = [\n    \"Shadow-Temple-Map-Chest\",\n    \"Shadow-Temple-Hover-Boots-Chest\",\n    \"Shadow-Temple-Compass-Chest\",\n    \"Shadow-Temple-Early-Silver-Rupee-Chest\",\n    \"Shadow-Temple-Invisible-Blades-Visible-Chest\",\n    \"Shadow-Temple-Invisible-Blades-Invisible-Chest\",\n    \"Shadow-Temple-Falling-Spikes-Lower-Chest\",\n    \"Shadow-Temple-Falling-Spikes-Upper-Chest\",\n    \"Shadow-Temple-Falling-Spikes-Switch-Chest\",\n    \"Shadow-Temple-Invisible-Spikes-Chest\",\n    \"Shadow-Temple-Freestanding-Key\",\n    \"Shadow-Temple-Wind-Hint-Chest\",\n    \"Shadow-Temple-After-Wind-Enemy-Chest\",\n    \"Shadow-Temple-After-Wind-Hidden-Chest\",\n    \"Shadow-Temple-Spike-Walls-Left-Chest\",\n    \"Shadow-Temple-Boss-Key-Chest\",\n    \"Shadow-Temple-Hidden-Floormaster-Chest\",\n    \"Bongo-Bongo-Heart\",\n];\n\nexport const GERUDO_TRAINING_GROUNDS = [\n    \"Gerudo-Training-Grounds-Lobby-Left-Chest\",\n    \"Gerudo-Training-Grounds-Lobby-Right-Chest\",\n    \"Gerudo-Training-Grounds-Stalfos-Chest\",\n    \"Gerudo-Training-Grounds-Beamos-Chest\",\n    \"Gerudo-Training-Grounds-Hidden-Ceiling-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-First-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-Second-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-Third-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-Final-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Right-Central-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Right-Side-Chest\",\n    \"Gerudo-Training-Grounds-Freestanding-Key\",\n    \"Gerudo-Training-Grounds-Underwater-Silver-Rupee-Chest\",\n    \"Gerudo-Training-Grounds-Hammer-Room-Clear-Chest\",\n    \"Gerudo-Training-Grounds-Hammer-Room-Switch-Chest\",\n    \"Gerudo-Training-Grounds-Eye-Statue-Chest\",\n    \"Gerudo-Training-Grounds-Near-Scarecrow-Chest\",\n    \"Gerudo-Training-Grounds-Before-Heavy-Block-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-First-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-Second-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-Third-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-Fourth-Chest\",\n];\n\nexport const SPIRIT_TEMPLE = [\n    \"Spirit-Temple-Child-Left-Chest\",\n    \"Spirit-Temple-Child-Right-Chest\",\n    \"Spirit-Temple-Child-Climb-East-Chest\",\n    \"Spirit-Temple-Child-Climb-North-Chest\",\n    \"Spirit-Temple-Compass-Chest\",\n    \"Spirit-Temple-Early-Adult-Right-Chest\",\n    \"Spirit-Temple-First-Mirror-Right-Chest\",\n    \"Spirit-Temple-First-Mirror-Left-Chest\",\n    \"Spirit-Temple-Map-Chest\",\n    \"Spirit-Temple-Sun-Block-Room-Chest\",\n    \"Spirit-Temple-Statue-Hand-Chest\",\n    \"Spirit-Temple-NE-Main-Room-Chest\",\n    \"Silver-Gauntlets-Chest\",\n    \"Mirror-Shield-Chest\",\n    \"Spirit-Temple-Near-Four-Armos-Chest\",\n    \"Spirit-Temple-Hallway-Left-Invisible-Chest\",\n    \"Spirit-Temple-Hallway-Right-Invisible-Chest\",\n    \"Spirit-Temple-Boss-Key-Chest\",\n    \"Spirit-Temple-Topmost-Chest\",\n    \"Twinrova-Heart\",\n];\n\nexport const LOCATIONS = {\n  'Bosses': BOSSES,\n  'Songs': SONG_LOCATIONS,\n  'Kokiri Forest': KOKIRI_FOREST,\n  'Lost Woods': LOST_WOODS,\n  'Sacred Forest Meadow': SACRED_FOREST_MEADOW,\n  'Hyrule Field': HYRULE_FIELD,\n  'Lake Hylia': LAKE_HYLIA,\n  'Gerudo Valley': GERUDO_VALLEY,\n  'Gerudo Fortress': GERUDO_FORTRESS,\n  'Wasteland': WASTELAND,\n  'Desert Colossus': DESERT_COLOSSUS,\n  'Market': MARKET,\n  'Hyrule Castle': HYRULE_CASTLE,\n  'Ganons Castle': GANONS_CASTLE,\n  'Kakariko Village': KAKARIKO_VILLAGE,\n  'Death Mountain Trail': DEATH_MOUNTAIN_TRAIL,\n  'Goron City': GORON_CITY,\n  'Death Mountain Crater': DEATH_MOUNTAIN_CRATER,\n  'Zoras River': ZORAS_RIVER,\n  'Zoras Domain': ZORAS_DOMAIN,\n  'Lon Lon Ranch': LON_LON_RANCH,\n  'Deku Tree': DEKU_TREE,\n  'Dodongos Cavern': DODONGOS_CAVERN,\n  'Jabu Jabus Belly': JABU_JABUS_BELLY,\n  'Forest Temple': FOREST_TEMPLE,\n  'Bottom of the Well': BOTTOM_OF_THE_WELL,\n  'Fire Temple': FIRE_TEMPLE,\n  'Ice Cavern': ICE_CAVERN,\n  'Water Temple': WATER_TEMPLE,\n  'Shadow Temple': SHADOW_TEMPLE,\n  'Gerudo Training Grounds': GERUDO_TRAINING_GROUNDS,\n  'Spirit Temple': SPIRIT_TEMPLE\n};\n","import React, { Component } from 'react';\nimport DroppableLocation from './DroppableLocation';\nimport { LOCATIONS, ITEMS, ITEM_COPIES, JUNK_POOL } from './Constants';\nimport { Draggable, DragDropContext } from 'react-beautiful-dnd';\nimport { MersenneTwister19937, pick as randomPick } from 'random-js';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    textAlign: 'center',\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst junkPool = {...JUNK_POOL};\nconst mt = MersenneTwister19937.autoSeed();\n\nconst assignJunk = () => {\n    let keys = Object.keys(junkPool);\n    if(!keys.length) {\n        throw Error('Exhausted junk pool while assigning blank locations!');\n    }\n    let item = randomPick(mt, keys);\n    junkPool[item] -= 1;\n    if(junkPool[item] === 0) {\n        delete junkPool[item];\n    }\n    return item;\n}\n\nexport default class Locations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            unassigned: []\n        };\n        for(let item of ITEMS) {\n            for(let i = 0, numCopies = ITEM_COPIES[item]||1; i < numCopies; ++i) {\n                this.state.unassigned.push(item+(numCopies > 1 ? '-' + (i+1) : ''));\n            }\n        }\n        for(let locationGroup of Object.values(LOCATIONS)) {\n            for(let location of locationGroup) {\n                this.state[location] = [];\n            }\n        }\n    }\n\n    reset = () => {\n        let state = {\n            unassigned: []\n        };\n        for(let item of ITEMS) {\n            for(let i = 0, numCopies = ITEM_COPIES[item]||1; i < numCopies; ++i) {\n                state.unassigned.push(item+(numCopies > 1 ? '-' + (i+1) : ''));\n            }\n        }\n        for(let locationGroup of Object.values(LOCATIONS)) {\n            for(let location of locationGroup) {\n                state[location] = [];\n            }\n        }\n        this.setState(state);\n    }\n\n    getList = id => this.state[id];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n\n            let state = { [source.droppableId]: items };\n\n            this.setState(state);\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                ...result\n            });\n        }\n    };\n\n    export = () => {\n        try {\n            let result = {};\n            Object.entries(this.state).forEach(([key, value]) => {\n                if(key !== 'unassigned') {\n                    if(value.length) {\n                        let [item] = value;\n                        if(/^([a-z]|\\s)+(?:\\s\\d+)$/i.test(item)) {\n                            item = item.split('-').slice(0, -1).join(' ');\n                        } else {\n                            item = item.split('-').join(' ');\n                        }\n                        result[key.split('-').join(' ')] = item;\n                    } else {\n                        result[key.split('-').join(' ')] = assignJunk();\n                    }\n                }\n            });\n            let json = '\"locations\": ' + JSON.stringify(result);\n            let html = \"<code>\" + json + \"</code>\";\n            let blob = new Blob([html], {type: 'text/html'});\n            let blobURL = URL.createObjectURL(blob);\n            window.open(blobURL);\n        } catch(e) {\n            alert(e.message)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <button type='button' name='reset' onClick={this.reset}>Reset</button>\n                <button style={{float: 'right'}} type='button' name='export' onClick={this.export}>Export</button>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div style={{display: 'inline-block'}}>\n                        <div style={{display: 'inline-block', marginLeft: '20px', maxHeight: '95vh', overflowY: 'auto'}}>\n                            <DroppableLocation\n                                key='unassigned'\n                                droppableId='unassigned'\n                                name='Unassigned'>\n                                {this.state.unassigned.map((item, index) => (\n                                    <Draggable\n                                        key={item}\n                                        draggableId={item}\n                                        index={index}>\n                                        {(provided, snapshot) => (\n                                            <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={getItemStyle(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                )}>\n                                                {item.split('-').join(' ')}\n                                            </div>\n                                        )}    \n                                    </Draggable>\n                                ))}\n                            </DroppableLocation>\n                        </div>\n                        <div style={\n                            {\n                                width: '80%',\n                                float: 'right'\n                            }\n                        }>\n                            <Tabs>\n                                <TabList>\n                                {Object.keys(LOCATIONS).map(locationName => (\n                                    <Tab key={locationName.split(' ').join('-')}>{locationName}</Tab>\n                                ))}\n                                </TabList>\n                                {Object.values(LOCATIONS).map((locationList) => (\n                                    <TabPanel>\n                                        <div style={{\n                                            display: 'flex',\n                                            flexWrap: 'wrap',\n                                            justifyContent: 'space-around',\n                                            maxHeight: '75vh',\n                                            overflowY: 'auto'\n                                        }}>\n                                        {locationList.map(location => (\n                                            <DroppableLocation\n                                                key={location}\n                                                droppableId={location}\n                                                name={location.split('-').join(' ')}\n                                                style={{flex: 1}}\n                                                isDropDisabled={this.state[location].length > 0}>\n                                                {this.state[location].map((item, index) => (\n                                                    <Draggable\n                                                        key={item}\n                                                        draggableId={item}\n                                                        index={index}>\n                                                        {(provided, snapshot) => (\n                                                            <div\n                                                                ref={provided.innerRef}\n                                                                {...provided.draggableProps}\n                                                                {...provided.dragHandleProps}\n                                                                style={getItemStyle(\n                                                                    snapshot.isDragging,\n                                                                    provided.draggableProps.style\n                                                                )}>\n                                                                {item.split('-').join(' ')}\n                                                            </div>\n                                                        )}    \n                                                    </Draggable>\n                                                ))}\n                                            </DroppableLocation>\n                                        ))}\n                                        </div>\n                                    </TabPanel>\n                                ))}\n                            </Tabs>\n                        </div>\n                    </div>\n                </DragDropContext>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Locations from './Locations';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Locations />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}